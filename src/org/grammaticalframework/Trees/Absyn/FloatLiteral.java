/* FloatLiteral.java
 * Copyright (C) 2010 Grégoire Détrez, Ramona Enache
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */
package org.grammaticalframework.Trees.Absyn; // Java Package generated by the BNF Converter.

public class FloatLiteral extends Lit {
  public final Double double_;

  public FloatLiteral(Double p1) { double_ = p1; }

  public <R,A> R accept(org.grammaticalframework.Trees.Absyn.Lit.Visitor<R,A> v, A arg) { return v.visit(this, arg); }

  public boolean equals(Object o) {
    if (this == o) return true;
    if (o instanceof org.grammaticalframework.Trees.Absyn.FloatLiteral) {
      org.grammaticalframework.Trees.Absyn.FloatLiteral x = (org.grammaticalframework.Trees.Absyn.FloatLiteral)o;
      return this.double_.equals(x.double_);
    }
    return false;
  }

  public int hashCode() {
    return this.double_.hashCode();
  }


}
