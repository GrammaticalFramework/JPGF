module SkelTrees where

-- Haskell module generated by the BNF converter

import AbsTrees
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transIdent :: Ident -> Result
transIdent x = case x of
  Ident str  -> failure x


transTree :: Tree -> Result
transTree x = case x of
  Lambda id tree  -> failure x
  Variable n  -> failure x
  Application tree0 tree  -> failure x
  Literal lit  -> failure x
  MetaVariable n  -> failure x
  Function id  -> failure x


transLit :: Lit -> Result
transLit x = case x of
  IntLiteral n  -> failure x
  FloatLiteral d  -> failure x
  StringLiteral str  -> failure x



